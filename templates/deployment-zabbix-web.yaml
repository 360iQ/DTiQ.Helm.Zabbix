{{- if .Values.zabbixweb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "zabbix.fullname" . }}-zabbix-web
  labels:
    app: {{ template "zabbix.fullname" . }}-zabbix-web
    app.kubernetes.io/name: zabbix-web
    helm.sh/chart: {{ include "zabbix.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}-zabbix-web
    app.kubernetes.io/managed-by: {{ .Release.Service }}-zabbix-web
spec:
  replicas: {{ .Values.zabbixweb.replicaCount }}
  selector:
    matchLabels:
      app:  {{ template "zabbix.fullname" . }}-zabbix-web
  template:
    metadata:
      labels:
        app: {{ template "zabbix.fullname" . }}-zabbix-web
        app.kubernetes.io/name: zabbix-web
        helm.sh/chart: {{ include "zabbix.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}-zabbix-web
        app.kubernetes.io/managed-by: {{ .Release.Service }}-zabbix-web
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if gt (len .Values.affinity) 0 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- else if .Values.zabbixweb.pod_anti_affinity }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: {{ .Release.Name }}-zabbix-web
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: zabbix-web
        resources:
          {{- toYaml .Values.zabbixweb.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.zabbixweb.image.repository }}:{{ .Values.zabbixweb.image.tag }}"
        imagePullPolicy: {{ .Values.zabbixweb.image.pullPolicy }}
        env:
          - name: ZBX_SERVER_NAME
          {{- if .Values.zabbixweb.zbx_server_name }}
            value: {{ .Values.zabbixweb.zbx_server_name }}
          {{- else }}
            value: Zabbix in K8S
          {{- end }}
          {{- if .Values.postgresql.enabled }}
          - name: DB_SERVER_HOST
            value: {{ template "zabbix.fullname" . }}-postgresql
          - name: DB_SERVER_PORT
            value: {{ .Values.postgresql.service.port | quote }}
          {{- else if .Values.db_access.secret_name }}
          - name: DB_SERVER_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db_access.secret_name }}
                key: host
          - name: DB_SERVER_PORT
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db_access.secret_name }}
                key: port
                optional: true
          {{- else }}
          - name: DB_SERVER_HOST
            {{- if .Values.db_access.DB_SERVER_HOST }}
            value: {{ .Values.db_access.DB_SERVER_HOST | quote }}
            {{- else }}
            value: {{ .Values.zabbixweb.DB_SERVER_HOST | quote }}
            {{- end -}}
          - name: DB_SERVER_PORT
            {{- if .Values.db_access.DB_SERVER_PORT }}
            value: {{ .Values.db_access.DB_SERVER_PORT | quote }}
            {{- else }}
            value: {{ .Values.zabbixweb.DB_SERVER_PORT | quote }}
            {{- end -}}
          {{- end }}
          {{- if .Values.db_access.secret_name }}
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db_access.secret_name }}
                key: user
                optional: true
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db_access.secret_name }}
                key: password
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: {{ .Values.db_access.secret_name }}
                key: dbname
                optional: true
          {{- else }}
          - name: POSTGRES_USER
            {{- if .Values.db_access.POSTGRES_USER }}
            value: {{ .Values.db_access.POSTGRES_USER | quote }}
            {{- else }}
            value: {{ .Values.zabbixweb.POSTGRES_USER | quote }}
            {{- end }}
          - name: POSTGRES_PASSWORD
            {{- if .Values.db_access.POSTGRES_PASSWORD }}
            value: {{ .Values.db_access.POSTGRES_PASSWORD | quote }}
            {{- else if .Values.zabbixserver.POSTGRES_PASSWORD_SECRET }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.zabbixserver.POSTGRES_PASSWORD_SECRET }}
                key: {{ default "password" .Values.zabbixserver.POSTGRES_PASSWORD_SECRET_KEY }}
            {{- else }}
            value: {{ .Values.zabbixweb.POSTGRES_PASSWORD | quote }}
            {{- end }}
          - name: POSTGRES_DB
            {{- if .Values.db_access.POSTGRES_DB }}
            value: {{ .Values.db_access.POSTGRES_DB | quote }}
            {{- else }}
            value: {{ .Values.zabbixweb.POSTGRES_DB | quote }}
            {{- end }}
          {{- end }}
          # - name: POSTGRES_USER_FILE
          #  value: value: {{ .Values.zabbixweb.POSTGRES_USER_FILE | quote }}
          #- name: POSTGRES_PASSWORD_FILE
          #  value: value: {{ .Values.zabbixweb.POSTGRES_PASSWORD_FILE | quote }}
          {{- range $item := .Values.zabbixweb.extraEnv }}
          - name: {{ $item.name }}
            value: {{ $item.value | quote  }}
          {{- end }}
        ports:
          - name: zabbix-web
            containerPort: 8080
            protocol: TCP
        {{- if .Values.zabbixweb.saml_certs_secret_name }}
        volumeMounts:
          - name: zabbix-web-samlcerts
            mountPath: /etc/zabbix/web/certs
        {{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.zabbixweb.livenessProbe.path }}
            port: zabbix-web
          initialDelaySeconds: {{ .Values.zabbixweb.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.zabbixweb.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.zabbixweb.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.zabbixweb.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.zabbixweb.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.zabbixweb.readinessProbe.path }}
            port: zabbix-web
          initialDelaySeconds: {{ .Values.zabbixweb.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.zabbixweb.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.zabbixweb.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.zabbixweb.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.zabbixweb.readinessProbe.failureThreshold }}
      imagePullSecrets:
      {{- range .Values.zabbixweb.image.pullSecrets }}
        - name: {{ . | quote }}
      {{- end }}
      {{- if .Values.zabbixweb.saml_certs_secret_name }}
      volumes:
        - name: zabbix-web-samlcerts
          secret:
            secretName: {{ .Values.zabbixweb.saml_certs_secret_name }}
      {{- end }}
{{- end }}
